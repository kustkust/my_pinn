\\u001b\[[\d;]*m
(File .*\.py:[\d]*,) 
$1\t\t

{
	"name": "AttributeError",
	"message": "Exception encountered when calling layer "gradient_layer_1" (type GradientLayer).

in user code:

    File "C:\Users\kust\AppData\Local\Temp\ipykernel_25020\1935839508.py", line 76, in call  *
        print_t(c, debug=print_debug)
    File "C:\Users\kust\AppData\Local\Temp\ipykernel_25020\2175010637.py", line 12, in print_t  *
        print(f"{names[0]}{t.shape}", t.numpy(), sep='\
')

    AttributeError: 'Tensor' object has no attribute 'numpy'


Call arguments received by layer "gradient_layer_1" (type GradientLayer):
  • x=tf.Tensor(shape=(None, 2), dtype=float32)",
	"stack": "---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
Cell In[12], line 4
      2 cases[0]["p"] = build_params(1)
      3 cases[0]["net"] = build_net([80,40], 'relu', **cases[0]["p"])
----> 4 cases[0]["pinn"] = build_pinn(cases[0]["net"], **cases[0]["p"])
      5 cases[0]["pinn"].compile('adam', 'mse')

Cell In[11], line 124, in build_pinn(network, dim, **p)
    117 outs = []
    119 l, kT, z, p_grd, nu, ro, e = \
    120     p["l"],p["kT"],p["z"],p["p_grd"],p["nu"],p["ro"], p["e"]
    122 c, c_t, c_grd, \
    123     Fi_grd, Fi_lap, j_div = \
--> 124     grads(ins[0])
    125 outs.append(c_t + j_div)
    126 outs.append(Fi_lap + 4*pi*l*kT*(z*c))

File ~\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\keras\utils\traceback_utils.py:70,
		in filter_traceback.<locals>.error_handler(*args, **kwargs)
     67     filtered_tb = _process_traceback_frames(e.__traceback__)
     68     # To get the full stack trace, call:
     69     # `tf.debugging.disable_traceback_filtering()`
---> 70     raise e.with_traceback(filtered_tb) from None
     71 finally:
     72     del filtered_tb

File ~\AppData\Local\Temp\__autograph_generated_filet0fslbpw.py:36,
		in outer_factory.<locals>.inner_factory.<locals>.tf__call(self, x)
     34     r = ag__.converted_call(ag__.ld(self).model, (ag__.ld(x),), None, fscope)
     35     (c, Fi) = (ag__.ld(r)['c'], ag__.ld(r)['Fi'])
---> 36 ag__.converted_call(ag__.ld(print_t), (ag__.ld(c),), dict(debug=ag__.ld(print_debug)), fscope)
     37 c_jac = ag__.converted_call(ag__.ld(g).batch_jacobian, (ag__.ld(c), ag__.ld(x)), None, fscope)[..., 0, :]
     38 ag__.converted_call(ag__.ld(print_t), (ag__.ld(c_jac),), dict(debug=ag__.ld(print_debug)), fscope)

File ~\AppData\Local\Temp\__autograph_generated_filegx2m72aj.py:83,
		in outer_factory.<locals>.inner_factory.<locals>.tf__print_t(t, full, debug)
     81 names = ag__.Undefined('names')
     82 callers_local_vars = ag__.Undefined('callers_local_vars')
---> 83 ag__.if_stmt(ag__.not_(ag__.ld(debug)), if_body_4, else_body_4, get_state_4, set_state_4, ('do_return', 'retval_'), 2)
     84 return fscope.ret(retval_, do_return)

File ~\AppData\Local\Temp\__autograph_generated_filegx2m72aj.py:80,
		in outer_factory.<locals>.inner_factory.<locals>.tf__print_t.<locals>.else_body_4()
     78 def else_body_3():
     79     ag__.ld(print)(f'{ag__.ld(names)[0]}{ag__.ld(t).shape}')
---> 80 ag__.if_stmt(ag__.ld(full), if_body_3, else_body_3, get_state_3, set_state_3, (), 0)

File ~\AppData\Local\Temp\__autograph_generated_filegx2m72aj.py:76,
		in outer_factory.<locals>.inner_factory.<locals>.tf__print_t.<locals>.else_body_4.<locals>.if_body_3()
     74         pass
     75     ag__.if_stmt(ag__.converted_call(ag__.ld(type), (ag__.ld(t),), None, fscope) is ag__.ld(np).array, if_body_1, else_body_1, get_state_1, set_state_1, (), 0)
---> 76 ag__.if_stmt(ag__.converted_call(ag__.ld(type), (ag__.ld(t),), None, fscope) is ag__.ld(tf).Tensor, if_body_2, else_body_2, get_state_2, set_state_2, (), 0)

File ~\AppData\Local\Temp\__autograph_generated_filegx2m72aj.py:60,
		in outer_factory.<locals>.inner_factory.<locals>.tf__print_t.<locals>.else_body_4.<locals>.if_body_3.<locals>.if_body_2()
     59 def if_body_2():
---> 60     ag__.ld(print)(f'{ag__.ld(names)[0]}{ag__.ld(t).shape}', ag__.converted_call(ag__.ld(t).numpy, (), None, fscope), sep='\
')

AttributeError: Exception encountered when calling layer "gradient_layer_1" (type GradientLayer).

in user code:

    File "C:\Users\kust\AppData\Local\Temp\ipykernel_25020\1935839508.py", line 76, in call  *
        print_t(c, debug=print_debug)
    File "C:\Users\kust\AppData\Local\Temp\ipykernel_25020\2175010637.py", line 12, in print_t  *
        print(f"{names[0]}{t.shape}", t.numpy(), sep='\
')

    AttributeError: 'Tensor' object has no attribute 'numpy'


Call arguments received by layer "gradient_layer_1" (type GradientLayer):
  • x=tf.Tensor(shape=(None, 2), dtype=float32)"
}